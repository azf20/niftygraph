enum SaleType {
  primary
  secondary
}

enum Network {
  xdai
  mainnet
}

type Ink @entity {
  id: ID!
  inkNumber: BigInt!
  jsonUrl: String!
  artist: Artist!
  limit: BigInt!
  count: BigInt
  tokens: [Token!]!
  sales: [Sale!] @derivedFrom(field: "ink")
  likes: [Like!] @derivedFrom(field: "ink")
  tokenTransfers: [TokenTransfer!] @derivedFrom(field: "ink")
  createdAt: BigInt
  mintPrice: BigInt!
  mintPriceSetAt: BigInt
  mintPriceNonce: BigInt
  bestPrice: BigInt!
  bestPriceSource: String
  bestPriceSetAt: BigInt
  likeCount: BigInt
  burnedCount: BigInt
  burned: Boolean
}

type Token @entity {
  id: ID!
  ink: Ink!
  owner: Bytes!
  createdAt: BigInt!
  network: Network!
  price: BigInt!
  priceSetAt: BigInt
  transferCount: BigInt
  transfers: [TokenTransfer!] @derivedFrom(field: "token")
  sales: [Sale!] @derivedFrom(field: "token")
  upgradeTransfer: TokenTransfer
  burned: Boolean
  artist: Artist
}

type Artist @entity {
  id: ID!
  address: Bytes!
  inks: [Ink]! @derivedFrom(field: "artist")
  inkCount: BigInt!
  earnings: BigInt
  sales: [Sale!] @derivedFrom(field: "artist")
  likes: [Like!] @derivedFrom(field: "artist")
  tokenTransfers: [TokenTransfer!] @derivedFrom(field: "artist")
  tokens: [Token!] @derivedFrom(field: "artist")
  likeCount: BigInt
  saleCount: BigInt
  createdAt: BigInt!
  lastInkAt: BigInt
  lastLikeAt: BigInt
  lastSaleAt: BigInt
}

type Sale @entity {
  id: ID!
  buyer: Bytes!
  seller: Bytes
  price: BigInt!
  token: Token!
  ink: Ink!
  artist: Artist!
  createdAt: BigInt!
  artistTake: BigInt!
  saleType: SaleType
  transfer: TokenTransfer!
  transactionHash: String
}

type TokenTransfer @entity {
  id: ID!
  token: Token!
  from: Bytes!
  to: Bytes!
  createdAt: BigInt!
  network: Network
  ink: Ink
  artist: Artist
  transactionHash: String!
  sale: Sale
}

type RelayPrice @entity {
  id: ID!
  createdAt: BigInt!
  price: BigInt!
}

type MetaData @entity {
  id: ID!
  value: String!
}

type Total @entity {
  id: ID!
  day: BigInt
  inks: BigInt
  tokens: BigInt
  sales: BigInt
  upgrades: BigInt
  artists: BigInt
}

type InkLookup @entity {
  id: ID!
  inkId: String!
}

type Like @entity {
  id: ID!
  ink: Ink!
  artist: Artist!
  liker: Bytes!
  createdAt: BigInt!
}
